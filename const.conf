#!/usr/bin/perl
    
    version     => '1.0.0',
    versionDate => '2021-12-14',
    
    logPath            => "/var/log/manifest",
    pidPath            => "/var/run/manifest",
    
    log => {
        log     => '-',
        debug   => '-',
        error   => '-',
    },
    
    log_main => {
        log     => '$logPath/main.log',
        debug   => '-',
        error   => 'log',
    },
    
    log_telegramd => {
        log     => '$logPath/telegramd.log',
        debug   => '-',
        error   => 'log',
    },
    
    log_flyevent => {
        log     => '$logPath/flyevent.log',
        debug   => '-',
        error   => 'log',
    },
    
    log_notify => {
        log     => '$logPath/notify.log',
        debug   => '-',
        error   => 'log',
    },
    
    log_oldchat => {
        log     => '$logPath/oldchat.log',
        debug   => '-',
        error   => 'log',
    },
    
    template_module_dir => '',
    template_force_rebuild => 0,
    
    redis  => {
        connection_name     => 'manifest:',
        database            => 1,
        host                => '127.0.0.1',
    },
    
    MemCached => {
        #servers => [ { address => '/var/run/memcached/memcached.sock', noreply => 1 } ],
        servers => [ { address => '/var/run/memcached/memcached.sock' } ],
        namespace => 'manifest:',
        #connect_timeout => 0.2,
        #io_timeout => 0.5,
        #close_on_error => 1,
        #compress_threshold => 100_000,
        #compress_ratio => 0.9,
        #compress_methods => [ \&IO::Compress::Gzip::gzip,
        #                      \&IO::Uncompress::Gunzip::gunzip ],
        #max_failures => 3,
        #failure_timeout => 2,
        #ketama_points => 150,
        #nowait => 1,
        #hash_namespace => 1,
        #serialize_methods => [ \&Storable::freeze, \&Storable::thaw ],
        #utf8 => ($^V ge v5.8.1 ? 1 : 0),
        #max_size => 512 * 1024,
    },
    
    tmpdir => '/home/manifest.tmp',
    
    flySheet => [
        {
            name    => 'АН-2',
            id      => 'rId1',
            count   => 12,
            color   => '#0000FF',
            hdr => [
                {
                    name    => "вып.",
                    regexp  => '^вып',
                    field   => "vyp",
                    num     => 1,
                },
                {
                    name    => "провер.",
                    regexp  => '^провер',
                    field   => "lso",
                },
                {
                    name    => "набл.",
                    regexp  => '^набл',
                    field   => "nabl",
                },
                {
                    name    => "пилот",
                    regexp  => '^пилот',
                    field   => "pilot",
                },
            ],
        },
        {
            name    => 'выс',
            id      => 'rId2',
            count   => 17,
            color   => '#00B000',
            hdr => [
                {
                    name    => "провер.",
                    regexp  => '^провер',
                    field   => "lso",
                },
                {
                    name    => "набл.",
                    regexp  => '^набл',
                    field   => "nabl",
                },
            ],
        },
    ],
    
    sheetBalance    => 3,
    sheetPeople     => 5,
    
    persType => [
        # Тип конкретного посадочного места
        # проверяется сверху вниз - проставляется первый совпавший
        # выполняется после идентификации группы
        {
            id                  => 'd-6',
            name                => 'Д-6',
            regexp_parashute    => '^Д-(6|10)',
            color_num_html      => '#95d451',
        },
        {
            id                  => 'ptl-72',
            name                => 'ПТЛ-72',
            regexp_parashute    => '^ПТЛ-72',
            color_num_html      => '#ccbfda',
        },
        {
            id                  => 'tandem-client',
            name                => 'Тандем-клиент',
            regexp_parashute    => '^[Тт](?:андем-)?[Кк]лиент',
            regexp_group        => '^tandem-\d+$',
            color_name_html     => '#fdff09',
        },
        {
            id                  => 'tandem-master',
            name                => '[Тт](?:андем-)?[Ии]нструктор',
            regexp_group        => '^tandem-\d+$',
            ingroup             => 2,
            color_name_html     => '#fdff09',
        },
        {
            id                  => 'tandem-operator',
            name                => 'Тандем-оператор',
            regexp_group        => '^tandem',
            regexp_parashute    => '^[Тт]?[Оо]ператор',
            color_name_html     => '#fdff09',
        },
        {
            id                  => 'tandem-exam',
            name                => 'Тандем-экзаменатор',
            regexp_parashute    => '^тандем-клиент',
            regexp_group        => '^tandem-tr-\d+$',
        },
        {
            id                  => 'tandem-cand',
            name                => 'Тандем-кандидат',
            regexp_group        => '^tandem-tr-\d+$',
            ingroup             => 2,
            color_name_html     => '#fdff09',
        },
        {
            id                  => 'aff-stud',
            name                => 'AFF-студент',
            regexp_parashute    => '^[Аа][Фф]',
            regexp_group        => '^aff',
            ingroup             => 1,
            color_name_html     => '#fbd5b3',
        },
        {
            id                  => 'aff-instr-main',
            name                => 'AFF-инструктор Основной',
            regexp_group        => '^aff',
            ingroup             => 2,
            color_name_html     => '#fbd5b3',
        },
        {
            id                  => 'aff-instr-sec',
            name                => 'AFF-инструктор Резервный',
            regexp_group        => '^aff13',
            ingroup             => 3,
            color_name_html     => '#fbd5b3',
        },
        {
            id                  => 'aff-operator',
            name                => 'AFF-оператор',
            regexp_group        => '^aff',
            regexp_parashute    => '^оператор',
            color_name_html     => '#fbd5b3',
        },
        {
            id                  => 'prog2',
            name                => '2ая программа',
            regexp_payed        => '^1',
            regexp_fly_sheetid  => 'rId1',
            regexp_code         => '^[^\d]*[12]\d\d\d$',
            regexp_parashute    => '\d+',
            regexp_zp           => '\d+',
        },
        {
            id                  => 'unknown-operator',
            name                => 'Неизвестный-оператор',
            regexp_parashute    => 'оператор',
        },
        {
            id                  => 'bp',
            name                => 'БП',
            regexp_code         => '^БП$',
        },
        {
            id                  => 'sport',
            name                => 'Спортсмен',
            regexp_code         => '^[^\d]*(400|450|500|550|600|650|700|750|800|850)$',
        },
        {
            id                  => 'unknown',
            name                => '-неизвестно-',
        },
    ],
    
    persGroup => [
        # Группа прыгающих
        # Подразумевается объединение в группу несколько посадочных мест (два и более)
        {
            id                  => 'tandem-tr',
            name                => 'Тандем-обучение',
            regexp_parashute    => '^тандем-клиент',
            regexp_code         => '^[Дд][Оо][Лл][Гг] ',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^тандем-клиент',
                    regexp_code         => '^[Дд][Оо][Лл][Гг] ',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
        },
        {
            id                  => 'tandem-tr',
            name                => 'Тандем-обучение',
            regexp_parashute    => '^тандем-стаж',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^тандем-стаж',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
        },
        {
            id                  => 'tand',
            name                => 'Тандем',
            regexp_parashute    => '^тандем-клиент',
            regexp_name         => '\S+', # Чтобы не хавался тестовый взлет
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^тандем-клиент',
                    regexp_name         => '\S+', # Чтобы не хавался тестовый взлет
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'tandem',
            name                => 'Тандем',
            regexp_parashute    => '^[Тт][Кк]лиент',
            regexp_name         => '\S+', # Чтобы не хавался тестовый взлет
            after   => [
                { regexp_parashute => '^[Тт][Ии]нструктор', },
                { regexp_parashute => '^[Тт][Оо]ператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^тандем-клиент',
                    regexp_name         => '\S+', # Чтобы не хавался тестовый взлет
                },
                { regexp_parashute => '^[Тт][Ии]нструктор', },
                { regexp_parashute => '^[Тт][Оо]ператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        #{
        #    id                  => 'tandem-solo',
        #    name                => 'Тандем-Соло',
        #    regexp_parashute    => '^(Сигма|Параавис|Рид|Танд)',
        #    regexp_name         => '\S+',
        #    regexp_no_group     => '^(tandem|aff)', # чтобы непереопределялись другие тандем-группы, которые выглядят так же
        #},
        {
            id                  => 'aff0',
            name                => 'AFF-0',
            regexp_parashute    => '^[Аа][Фф]',
            regexp_prygcount    => '^0 ',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^[Аа][Фф]',
                    regexp_prygcount    => '^0 ',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'naff0',
            name                => 'AFF-0',
            regexp_parashute    => '^УР\s+0',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^УР\s+0',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'aff13',
            name                => 'AFF-1-3',
            regexp_parashute    => '^[Аа][Фф]',
            regexp_prygcount    => '^[123] ',
            after   => [
                { any => 1 },
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^[Аа][Фф]',
                    regexp_prygcount    => '^[123] ',
                },
                { any => 1 },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'naff13',
            name                => 'AFF-1-3',
            regexp_parashute    => '^УР\s+[123]',
            after   => [
                { any => 1 },
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^УР\s+[123]',
                },
                { any => 1 },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'aff4567',
            name                => 'AFF-4-7',
            regexp_parashute    => '^[Аа][Фф]',
            regexp_prygcount    => '^[4567] ',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^[Аа][Фф]',
                    regexp_prygcount    => '^[4567] ',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'naff4567',
            name                => 'AFF-4-7',
            regexp_parashute    => '^УР\s+[4567]',
            after   => [
                { any => 1 },
                { regexp_parashute => '^оператор', },
            ],
            list => [
                {
                    regexp_parashute    => '^УР\s+[4567]',
                },
                { any => 1 },
                { regexp_parashute => '^оператор', optional => 1 },
            ],
            operator_coeff      => 1500,
        },
        {
            id                  => 'coach',
            name                => 'Коуч',
            regexp_parashute    => '^[Кк][Оо][Уу][Чч]',
            after   => [
                { any => 1 },
            ],
            list => [
                { any => 1 },
                { regexp_parashute => '^[Кк][Оо][Уу][Чч]', },
            ],
        },
        {
            id                  => 'trener',
            name                => 'Тренер',
            regexp_parashute    => '^[Тт][Рр][Ее][Нн][Ее][Рр]',
            after   => [
                { regexp_parashute => '^[Сс][Пп][Оо][Рр][Тт]', },
            ],
            list => [
                { regexp_parashute => '^[Сс][Пп][Оо][Рр][Тт]', },
                { regexp_parashute => '^[Тт][Рр][Ее][Нн][Ее][Рр]', },
            ],
        },
    ],
    
    # Список полей-колонок на странице "Постоянный состав"
    # Поиск соответствия имени колонки в документе производится в указанном порядке
    # В данном порядке так же будут отображены колонки в вебе
    # Все колонки, у которых указано name, считаются колонками с данными
    PeopleColumn => [
        { code  => 'lso',       name    => 'Линия осмотра',     regexp => 'иния осм',           counter => 'spec#lso', },
        { code  => 'vyp',       name    => 'Выпуск',            regexp => 'Вып',                counter => 'spec#vyp', },
        { code  => 'packtest',  name    => 'Пров-ка укладки',   regexp => 'Пров.+ укл' },
        { code  => 'pokat',     name    => 'Покатушки',         regexp => 'Покат' },
        { code  => 'admin',     name    => 'Админ',             regexp => 'Админ',              counter => 'payed#', },
        { code  => 'pilot',     name    => 'Налет',             regexp => 'Налет',              counter => 'spec#pilot', },
        { code  => 'd6',        name    => 'Подготовка  Д-6 и ПТЛ-72', regexp => 'Подг.+ Д-6', },
        { code  => 'pack',      name    => 'Укладка',           regexp => 'Укладка', },
        { code  => 'rent',      name    => 'Аренда пар-та',     regexp => 'Аренда',             counter => 'rent#tandem', },
        { code  => 'operator',  name    => 'Оператор',          regexp => 'Операт',             counter => 'operator#.*', },
        { code  => 'ground',    name    => 'Наземка',           regexp => 'Наземка' },
        { code  => 'tandem',    name    => 'Тандем',            regexp => 'Тандем',             counter => 'tandem-instr#(tm|exam|overload)', },
        { code  => 'aff',       name    => 'АФФ',               regexp => 'АФФ',                counter => 'aff#.*', },
        { code  => 'benz',      name    => 'Бензин',            regexp => 'Бензин' },
        { code  => 'summ',                                      regexp => 'Сумма' },
        { code  => 'payed',                                     regexp => 'Росп.+ получ' },
    ],
    
    # Оповещение в Telegram
    telegram_token => '5001893123:AAG6lfzFBh-dha9_vgIvroLJYCWCo6y9MN0',
    telegram_reply => {
        db              => 'Проблема с базой данных, попробуйте повторить запрос позднее',
        
        help            => 'Привет! Я - Бот, который оповестит Вас о взлёте, в котором Вы записаны. Напишите мне...'."\n\n".
                            
                            '• Для регистрации в системе:'."\n".
                            '     Я Фамилия И.О.'."\n".
                            'или:'."\n".
                            '     /im Bond J.'."\n\n".
                            
                            'ФИО необходимо указать так, как оно отображается в Мониторе Взлётов. '.
                            'ФИО допустимо писать в одном сообщении после «я»: через пробел или следующим сообщением.'."\n\n".
                            
                            '• Для получения информации о взлётах, в которых Вы записаны:'."\n".
                            '     инфо'."\n".
                            'или:'."\n".
                            '     /info'."\n\n".
                            
                            '• Для удаления своего ФИО из системы оповещения:'."\n".
                            '     удалить'."\n".
                            'или:'."\n".
                            '     /delete'."\n\n".
                            
                            'В любых командах указывать косую черту / необязательно.'."\n\n".
                            
                            'Важно!'."\n".
                            '• Оповещения, рассылаемые этим ботом - лишь подсказка, работающая в тестовом режиме.'."\n".
                            '• Оповещение может быть ошибочным, либо не отправиться.'."\n".
                            '• Слушайте громкую связь! - это единственный достоверный источник информации о взлётах.',
        
        im_format       => 'Ошибка Формата ФИО.'."\n".
                            'Укажите свою фамилию с инициалами, например: я Иванов И.О.',
        im_waitname     => 'Укажите свою фамилию с инициалами так, как она отображается в Мониторе Взлётов',
        im_ok           => 'Вы зарегистрированы под именем %s',
        
        unreg_noexists  => 'Вы не зарегистрированы в системе',
        unreg_ok        => 'Успешно удалена регистрация на имя %s',
        
        inf_noexists    => 'Вы не зарегистрированы в системе',
        inf_flynull     => 'Не могу получить информацию по взлётам',
        inf_flyqueue    => 'Вы записаны в: %s (%s) на высоту: %s',
        inf_flybefore   => 'Вы записаны в: %s (%s), ему готовность: %d мин',
        inf_flynoqueue  => 'Вас нет в планируемых взлётах.',
        inf_flytoff     => 'Ваш взлёт: %s (%s) улетел! %d мин назад',
        inf_oldhead     => 'Выполненные взлёты:',
        inf_flyitem     => '- %s (%s) на высоту: %s',
        inf_paysumm     => 'Общая сумма за сегодня: %d.',
        inf_nopay       => 'Нет задолженности за сегодня.',
        
        ntf_dup         => 'Обнаружено две записи во взлёте с именем %s (%s %s)',
        ntf_add         => '%s, Вы записаны в %s (%s) на %s',
        ntf_del         => '%s, Вас выписали из: %s (%s)',
        ntf_edit        => '%s, Вас переписали на %s (%s %s)',
        ntf_beftime     => '%s, готовность %d мин: %s (%s)',
        ntf_flynow      => '%s, приглашён на старт: %s (%s)',
    },
